apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

repositories {

}

android {
    def majorVersion = 2
    def minorVersion = 1

    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    testOptions.unitTests.includeAndroidResources true
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    defaultConfig {
        applicationId "se.barsk.park"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 6
        versionName "$majorVersion.$minorVersion"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "boolean", "releaseBuild", "false"
        buildConfigField "int", "initialParkedCars", "0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "releaseBuild", "true"
        }
        mock_6 {
            buildConfigField "int", "initialParkedCars", "6"
            signingConfig signingConfigs.debug
            debuggable true
        }
        mock_5 {
            buildConfigField "int", "initialParkedCars", "5"
            signingConfig signingConfigs.debug
            debuggable true
        }
        mock_4 {
            buildConfigField "int", "initialParkedCars", "4"
            signingConfig signingConfigs.debug
            debuggable true
        }
        mock_3 {
            buildConfigField "int", "initialParkedCars", "3"
            signingConfig signingConfigs.debug
            debuggable true
        }
        mock_2 {
            buildConfigField "int", "initialParkedCars", "2"
            signingConfig signingConfigs.debug
            debuggable true
        }
        mock_1 {
            buildConfigField "int", "initialParkedCars", "1"
            signingConfig signingConfigs.debug
            debuggable true
        }
        mock_0 {
            buildConfigField "int", "initialParkedCars", "0"
            signingConfig signingConfigs.debug
            debuggable true
        }
    }

    flavorDimensions "build"
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "build"
        }
        prod {
            dimension "build"
        }
    }

    // Remove mockRelease and prodMock_* as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        } else if (variant.buildType.name.startsWith("mock")
                && variant.getFlavors().get(0).name == "prod") {
            variant.setIgnore(true)
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-beta02'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.github.kittinunf.fuel:fuel-android:2.2.1'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.2.1'
    implementation 'com.github.kittinunf.result:result:2.2.0'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-dynamic-links:19.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.1'
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation 'net.danlew:android.joda:2.10.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20180813'
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.robolectric:robolectric:4.3"
    testImplementation "org.robolectric:shadows-supportv4:4.3"
    testImplementation 'org.amshove.kluent:kluent-android:1.30'
}
repositories {
    mavenCentral()
    maven {
        url "https://maven.google.com"
    }
    maven { url 'https://maven.fabric.io/public' }

}
apply plugin: 'com.google.gms.google-services'
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.31.1'
    }
}
